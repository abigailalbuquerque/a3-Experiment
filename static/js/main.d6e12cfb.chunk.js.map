{"version":3,"sources":["graphs/random_points_color_0.csv","graphs/random_points_color_1.csv","graphs/random_points_color_2.csv","graphs/random_points_color_3.csv","graphs/random_points_color_4.csv","graphs/experiment2_random_points_saturated.csv","graphs/experiment2_random_points_second_farthest.csv","graphs/experiment2_random_points_light.csv","graphs/experiment2_random_points_muted.csv","graphs/experiment2_random_points_dark.csv","Axis.js","Scatterplot.js","Datapoint.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Axis","_ref","x","y","scale","type","gRef","useD3","anchor","axis","d3","concat","call","React","createElement","transform","ref","Scatterplot","width","height","data","datapoint","xScale","domain","range","yScale","map","d","key","id","cx","cy","r","fill","color","Datapoint","timeStart","timeEnd","App","csvFiles","csv_0","csv_1","csv_2","csv_3","csv_4","csv_2_0","csv_2_1","csv_2_2","csv_2_3","csv_2_4","csvNumber","setcsvNumber","useState","canGo","setCanGo","setData","useEffect","then","csvData","console","log","formattedData","parseInt","line","parseFloat","Color","dimensions","setDimensions","navGraph","event","document","getElementById","style","display","performance","now","className","onClick","n","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.d6e12cfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/random_points_color_0.191ed9d3.csv\";","module.exports = __webpack_public_path__ + \"static/media/random_points_color_1.f85ac575.csv\";","module.exports = __webpack_public_path__ + \"static/media/random_points_color_2.50bba3ce.csv\";","module.exports = __webpack_public_path__ + \"static/media/random_points_color_3.dece0975.csv\";","module.exports = __webpack_public_path__ + \"static/media/random_points_color_4.5300bbd2.csv\";","module.exports = __webpack_public_path__ + \"static/media/experiment2_random_points_saturated.19cad2a6.csv\";","module.exports = __webpack_public_path__ + \"static/media/experiment2_random_points_second_farthest.251b7759.csv\";","module.exports = __webpack_public_path__ + \"static/media/experiment2_random_points_light.96de208c.csv\";","module.exports = __webpack_public_path__ + \"static/media/experiment2_random_points_muted.20a5a3a1.csv\";","module.exports = __webpack_public_path__ + \"static/media/experiment2_random_points_dark.51c2d9f0.csv\";","import React from \"react\";\nimport { useD3 } from \"d3blackbox\";\nimport * as d3 from \"d3\";\n\nconst Axis = ({ x, y, scale, type = \"Bottom\" }) => {\n  const gRef = useD3(anchor => {\n    const axis = d3[`axis${type}`](scale);\n\n    d3.select(anchor).call(axis);\n  });\n\n  return <g transform={`translate(${x}, ${y})`} ref={gRef} />;\n};\n\nexport default Axis;\n","import React, { useMemo } from \"react\";\nimport * as d3 from \"d3\";\n\nimport Axis from \"./Axis\";\n\n// <circle cx={x} cy={y} r={3} />\n\nconst Scatterplot = ({ x, y, width, height, data, datapoint }) => {\n  const xScale = d3.scaleLinear()\n    .domain([0, 100]) // TODO: change to parameter?\n    .range([0, width]);\n\n  // const yScale = useMemo(\n  //   () =>\n  //     d3\n  //       .scaleLinear()\n  //       .domain([0, 100])\n  //       .range([0, height]),\n  //   [height]\n  // );\n  const yScale = d3.scaleLinear()\n    .domain([0, 100])\n    .range([0, height]);\n\n  return (\n    <g transform={`translate(${x}, ${y})`}>\n      {data.map(d => (\n        <circle key={d.id} cx={xScale(d.x)} cy={yScale(d.y)} r={5} fill={d.color} />\n      ))}\n      <Axis x={0} y={height} scale={xScale} />\n      <Axis x={0} y={0} scale={yScale} type={\"Left\"} />\n    </g>\n  );\n};\n\nexport default Scatterplot;\n","import React from \"react\";\n\nconst style = {\n  fill: \"steelblue\",\n  fillOpacity: 0.7,\n  stroke: \"steelblue\",\n  strokeWidth: \"1.5px\"\n};\n\nconst Datapoint = ({ x, y }) => {\n  return null;\n};\n\nexport default Datapoint;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\nimport Scatterplot from \"./Scatterplot\";\nimport Datapoint from \"./Datapoint\";\nimport * as d3 from \"d3\";\nimport csv_0 from \"./graphs/random_points_color_0.csv\";\nimport csv_1 from \"./graphs/random_points_color_1.csv\";\nimport csv_2 from \"./graphs/random_points_color_2.csv\";\nimport csv_3 from \"./graphs/random_points_color_3.csv\";\nimport csv_4 from \"./graphs/random_points_color_4.csv\";\nimport csv_2_0 from \"./graphs/experiment2_random_points_saturated.csv\"\nimport csv_2_1 from \"./graphs/experiment2_random_points_second_farthest.csv\"\nimport csv_2_2 from \"./graphs/experiment2_random_points_light.csv\"\nimport csv_2_3 from \"./graphs/experiment2_random_points_muted.csv\"\nimport csv_2_4 from \"./graphs/experiment2_random_points_dark.csv\"\n\n\nvar timeStart\nvar timeEnd\n\nfunction App() {\n  const csvFiles = [\n    csv_0,\n    csv_1,\n    csv_2,\n    csv_3,\n    csv_4,\n    csv_2_0,\n    csv_2_1,\n    csv_2_2,\n    csv_2_3,\n    csv_2_4,\n  ];\n\n  const [csvNumber, setcsvNumber] = useState(0);\n  const [canGo, setCanGo] = useState(false)\n  const [data, setData] = useState([]);\n  function mouseClicked(event){\n    console.log(event.pageX, event.pageY)\n    setCanGo(false)\n    setcsvNumber(csvNumber+1)\n  }\n\n  useEffect(() => {\n    d3.csv(csvFiles[csvNumber]).then(function(csvData) {\n      console.log(\"csvData\")\n      console.log(csvData)\n      const formattedData = csvData.map(d => ({\n        id: parseInt(d.line),\n        x: parseFloat(d.x),\n        y: parseFloat(d.y),\n        color: d.Color,\n      }));\n      setData(formattedData);\n    });\n  }, [csvNumber]);\n\n  const [dimensions, setDimensions] = useState({\n    width: 500,\n    height: 500\n  });\n\n  function navGraph(event){\n    document.getElementById(\"graph\").style.display = \"block\";\n    document.getElementById(\"intro\").style.display = \"none\";\n    document.getElementById(\"experiment2\").style.display = \"none\";\n    document.getElementById(\"break\").style.display = \"none\";\n    timeStart = performance.now()\n  }\n\n  function navBreak(event){\n    timeEnd = performance.now()\n    if(csvNumber === 4){\n      document.getElementById(\"graph\").style.display = \"none\";\n      document.getElementById(\"experiment2\").style.display = \"block\";\n    }\n    else if(csvNumber === 9){\n      document.getElementById(\"graph\").style.display = \"none\";\n      document.getElementById(\"end\").style.display = \"block\";\n      document.getElementById(\"experiment2\").style.display = \"none\";\n    }\n    else{\n      document.getElementById(\"graph\").style.display = \"none\";\n      document.getElementById(\"break\").style.display = \"block\";\n      document.getElementById(\"experiment2\").style.display = \"none\";\n    }\n    console.log(timeEnd-timeStart) //Prints time to click\n    setcsvNumber(n => n+1)\n  }\n\n  useEffect(() => {\n    if(csvNumber === 0){\n      document.getElementById(\"break\").style.display = \"none\";\n      document.getElementById(\"graph\").style.display = \"none\";\n      document.getElementById(\"experiment2\").style.display = \"none\";\n      document.getElementById(\"end\").style.display = \"none\";\n      }\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <div id=\"intro\" className=\"text-center intro\">\n        <h3 className=\"mx-auto p-2\">In this experiment, you are asked to find and click this red circle as fast as you can in a scatterplot. There will be 7 scatterplots in the experiment. We will also start with a sample scatterplot for you to practice and familiarize yourself with. We won't record any other information from you except the time it takes to find and click the red circle.</h3>\n        <h3 className=\"mx-auto p-2\">Click the \"agree\" button to begin.</h3>\n        <button className=\"btn btn-primary\" onClick={navGraph}>Agree</button> \n      </div>\n      \n      <svg id=\"graph\" width=\"700\" height=\"700\" onClick={navBreak}>\n        <Scatterplot\n          x={100}\n          y={100}\n          width={dimensions.width}\n          height={dimensions.height}\n          data={data}\n        />\n      </svg>\n\n      <div id=\"break\">\n        <h3 className=\"mx-auto p-2\">Click \"next\" when you're ready for the next graph.</h3>\n        <button className=\"btn btn-primary\" onClick={navGraph}>Next</button> \n      </div>\n\n      <div id= \"experiment2\">\n        <h2>Experiment 2</h2>\n        <h3 className=\"mx-auto p-2\">In this experiment, you are asked to find and click the black circle as fast as you can in a scatterplot. There will be 5 scatterplots in the experiment. We won't record any other information from you except the time it takes to find and click the black circle.</h3>\n        <button className=\"btn btn-primary\" onClick={navGraph}>Next</button> \n      </div>\n\n      <div id=\"end\">\n        <h3 className=\"mx-auto p-2\">This is the end of the experiment. Thank you for participating!</h3>\n      </div>\n\n    </div>\n\n    // <div className=\"App\">\n    //   <div style={{display: 'flex', alignItems: 'center'}}>\n    //     <div id=\"container\" style={{width: '300px', height: '300px'}}>\n    //         {canGo \n    //         && <img key={imageNo} style={{cursor: 'pointer'}} src={imageList[imageNo]} alt={`${imageNo}`} onClick={mouseClicked} />}\n    //     </div>\n    //     {canGo \n    //     && <div style={{\"margin\": \"50px\", width: '125px', 'fontSize': '25px'}}>\n    //       Click the red circle to continue.\n    //     </div> }\n    //     {!canGo \n    //     // && <h1>Click continue when you're ready for the next graph.</h1>\n    //     && <Button variant=\"primary\"  style={{marginLeft: 'auto', marginRight: 'auto', marginTop:'auto', marginBottom:'auto'}} onClick={()=>setCanGo(true)}>Continue</Button> \n    //     }\n    //   </div>\n    // </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}